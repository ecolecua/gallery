[{"/Users/josegomez.dev/Desktop/photo-contest/src/index.js":"1","/Users/josegomez.dev/Desktop/photo-contest/src/App.js":"2","/Users/josegomez.dev/Desktop/photo-contest/src/reportWebVitals.js":"3","/Users/josegomez.dev/Desktop/photo-contest/src/components/UploadForm.js":"4","/Users/josegomez.dev/Desktop/photo-contest/src/firebase/config.js":"5"},{"size":535,"mtime":1652863289908,"results":"6","hashOfConfig":"7"},{"size":1127,"mtime":1652864895049,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1652863289908,"results":"9","hashOfConfig":"7"},{"size":1459,"mtime":1652864772175,"results":"10","hashOfConfig":"7"},{"size":934,"mtime":1652863289907,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qc2j48",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/josegomez.dev/Desktop/photo-contest/src/index.js",[],[],"/Users/josegomez.dev/Desktop/photo-contest/src/App.js",[],[],"/Users/josegomez.dev/Desktop/photo-contest/src/reportWebVitals.js",[],[],"/Users/josegomez.dev/Desktop/photo-contest/src/components/UploadForm.js",["29"],[],"import React, { useState } from 'react';\n// import ProgressBar from './ProgressBar';\nimport { storage } from '../firebase/config';\nimport { ref, uploadBytes } from 'firebase/storage';\nimport { v4 } from 'uuid';\n\nconst UploadForm = () => {\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n\n  const types = ['image/png', 'image/jpeg', 'image/jpg'];\n\n  const changeHandler = (e) => {\n    let selected = e.target.files[0];\n\n    if (selected && types.includes(selected.type)) {\n      setFile(selected);\n      setError(null);\n\n      const imageRef = ref(storage, `images/${selected.name + v4()}`);\n      uploadBytes(imageRef, selected).then(() => {\n        alert('Image Uploaded!');\n        window.location.reload();\n      });\n    } else {\n      setFile(null);\n      setError('Invalid format!~');\n    }\n  };\n\n  return (\n    <form>\n      <label htmlFor=\"upload-photo\">\n        <input\n          style={{ display: 'none' }}\n          type=\"file\"\n          id=\"upload-photo\"\n          onChange={changeHandler}\n        />\n        <div width=\"auto\" style={{ cursor: 'pointer' }}>\n          <img\n            src=\"https://cdn.picpng.com/icon/upload-files-icon-66764.png\"\n            alt=\"\"\n            width={'100'}\n          />\n        </div>\n      </label>\n      <>\n        {error && <div>{error}</div>}\n        {/* {file && <ProgressBar file={file} setFile={setFile} />} */}\n      </>\n    </form>\n  );\n};\n\nexport default UploadForm;\n",[],"/Users/josegomez.dev/Desktop/photo-contest/src/firebase/config.js",[],[],{"ruleId":"30","severity":1,"message":"31","line":8,"column":10,"nodeType":"32","messageId":"33","endLine":8,"endColumn":14},"no-unused-vars","'file' is assigned a value but never used.","Identifier","unusedVar"]